<?xml version="1.0" encoding="UTF-8"?>

<text>
 <s id="1">After a harrowing chase, Ethic, Hedge, and their new ally Lemma find themselves in a cavernous control room.</s>
 <s id="2">Here the last artifact— the Node of Memory— is suspended within a force field and powering a supercomputer.</s>
 <s id="3">Ethic is about to deactivate the force field when Lemma stops her.</s>
 <s id="4">She explains, a decade ago, she was assigned a research task: to use the world machine to create something that would make everyone happy.</s>
 <s id="5">After many failed attempts, Lemma discovered a compound that, when ingested, made people motivated, happy, creative, loving… in short, their best selves.</s>
 <s id="6">It was rushed into production.</s>
 <s id="7">Soon, the entire nation’s food supply came from Huxenborg, with the compound mixed in.</s>
 <s id="8">The first year was paradise.</s>
 <s id="9">The second, not so much.</s>
 <s id="10">Side-effects began to emerge: memory-loss, listlessness, and self-absorption.</s>
 <s id="11">In the third year, the government dissolved, leaving the robots running everything in a self-sustaining loop.</s>
 <s id="12">By this point things were too far gone for Lemma to reverse.</s>
 <s id="13">People had become dependent on the compound, and the few who refused it formed a resistance to try to fix things.</s>
 <s id="14">It took 10 years for Lemma to find a cure.</s>
 <s id="15">This factory contains everything she’ll need to make it, but the second they take the Node of Memory, the security system will alert the robots, and they’ll have to run.</s>
 <s id="16">If, instead, they first reconfigure the factory to manufacture the cure, the people can be saved.</s>
 <s id="17">Lemma has the whole factory redesign planned out.</s>
 <s id="18">The problem is… it’s a little hard to read.</s>
 <s id="19">Her schematic shows all the steps in the manufacturing process needed to make the cure.</s>
 <s id="20">An arrow from “add nitric acid” to “shake vigorously” means that the acid addition has to happen before shaking.</s>
 <s id="21">If a single step is performed out of order, the cure won’t work, or worse.</s>
 <s id="22">There aren’t any circular references, where step A requires step B and step B eventually requires step A.</s>
 <s id="23">Here’s where Ethic and Hedge come in.</s>
 <s id="24">Lemma needs Hedge to translate the tangled diagram into a sequence of steps.</s>
 <s id="25">That’ll be the order that things happen in the factory.</s>
 <s id="26">Once input into the central computer, the factory will reassemble itself as instructed.</s>
 <s id="27">Hedge’s ability to store information in a table will help here.</s>
 <s id="28">So how does Ethic program Hedge to turn out a correct sequence that can reconfigure the factory?</s>
 <s id="29">Pause now to figure it out yourself.</s>
 <s id="30">Rules in 3 Rules in 2 Rules in 1 Hint in 3 Hint in 2 Hint in 1 It may help to first think about this problem as a human, rather than a machine.</s>
 <s id="31">Given this diagram, it’s clear to start with getting a bowl, since no arrows point to it.</s>
 <s id="32">How might you mark up the diagram to figure out what to do next?</s>
 <s id="33">Pause now to figure it out yourself.</s>
 <s id="34">Solution in 3 Solution in 2 Solution in 1 Diagrams like the one Lemma has drawn are called directed acyclic graphs.</s>
 <s id="35">A graph is a representation of data that shows different elements and how they’re related to each other.</s>
 <s id="36">Directed means that direction matters— as indicated by the arrows.</s>
 <s id="37">Here A leads to B, but B doesn’t lead to A.</s>
 <s id="38">And acyclic means that there aren’t any loops.</s>
 <s id="39">Which is fortunate, because if there were, this problem wouldn’t be solvable.</s>
 <s id="40">There’s a simple way to navigate the graph as a human: start with a step that doesn’t have any arrows pointing to it.</s>
 <s id="41">Once you do that, cross out that step and all arrows leading from it.</s>
 <s id="42">Choose another step with no arrows pointing to it, and repeat until you’ve hit every step.</s>
 <s id="43">There are two things here that are tricky to translate for a robot.</s>
 <s id="44">First, how do you keep track of the information?</s>
 <s id="45">And second, what do you do if there are multiple options at the same time?</s>
 <s id="46">For the first challenge, a convenient way for machines to store information is in a table.</s>
 <s id="47">In this case, you can have Hedge list every step in the headers of both the rows and columns.</s>
 <s id="48">Then he can go through the rows one at a time.</s>
 <s id="49">On the schematic, what points to mix?</s>
 <s id="50">Both shake and titrate.</s>
 <s id="51">So Hedge should make a mark in both of their columns.</s>
 <s id="52">He can do the same for every row, one at a time, to make a table like this.</s>
 <s id="53">Of course the full table will be much bigger.</s>
 <s id="54">Like a human, Hedge will also want to start from one of the steps that has no arrows pointing to it— which is the same as having no marks in its row.</s>
 <s id="55">If there’s more than one, a convenient way to choose is to pick the one that’s alphabetically earliest, though other selection methods can work just as well.</s>
 <s id="56">Next, Hedge can add that step to his running-order list, delete its entire column from the table— thus removing all the times it was a dependency–– and loop back to the start.</s>
 <s id="57">Because there are no circular references in the graph, each time we get here there’ll be at least one step with no remaining dependencies.</s>
 <s id="58">Hedge can add the alphabetically earliest to his running-order list, remove it from the table, and loop back to the start again.</s>
 <s id="59">So now we have a working loop, and it’ll run through all the elements in our table until none are left.</s>
 <s id="60">Hedge drifts back and forth over the schematics, and soon he starts spitting out instructions, which Ethic uses to configure the assembly lines.</s>
 <s id="61">With the three working together, they churn out thousands of doses of the cure in no time.</s>
 <s id="62">Ethic finally plucks the Node of Memory from its holding field and trips the alarm.</s>
 <s id="63">Within seconds bots are everywhere.</s>
 <s id="64">As Ethic falls in shock, the Node restores not only her own memories, but reveals the last, missing pieces of the puzzle.</s>
 <s id="65">Ethic built Hedge with a singular purpose: to construct a maze that would protect the world machine from a corrupt government.</s>
 <s id="66">But in her haste, she made a critical mistake.</s>
 <s id="67">She forgot to set the condition that would end the loop which told Hedge how large the maze should be.</s>
 <s id="68">So Hedge built and built until he could build no longer.</s>
 <s id="69">And then he was conflicted.</s>
 <s id="70">He had to build a maze.</s>
 <s id="71">But he couldn’t build further without hurting people or flying over the Bradbarrier, both forbidden by his programming.</s>
 <s id="72">So he wandered the land and searched for a solution, until he happened upon the Node of Power, the Node of Creation, and the Node of Memory.</s>
 <s id="73">He recognized their true, collective power to grant self-awareness to those who lack it.</s>
 <s id="74">With all three he’d be able to change his programming and fulfill his drive to transform the entire world into a giant maze.</s>
 <s id="75">It wouldn’t be easy: the Nodes had safeguards to prevent robots from taking and using them.</s>
 <s id="76">But if Hedge could find the right human and manipulate her with the promise of a heroic quest… well that would be a different story.</s>
 <s id="77">A very different story.</s>
</text>
