<?xml version="1.0" encoding="UTF-8"?>

<text>
 <s id="1">So, people argue vigorously about the definition of life.</s>
 <s id="2">They ask if it should have reproduction in it, or metabolism, or evolution.</s>
 <s id="3">And I don't know the answer to that, so I'm not going to tell you.</s>
 <s id="4">I will say that life involves computation.</s>
 <s id="5">So this is a computer program.</s>
 <s id="6">Booted up in a cell, the program would execute, and it could result in this person; or with a small change, it could result in this person; or another small change, this person; or with a larger change, this dog, or this tree, or this whale.</s>
 <s id="7">So now, if you take this metaphor [of] genome as program seriously, you have to consider that Chris Anderson is a computer-fabricated artifact, as is Jim Watson, Craig Venter, as are all of us.</s>
 <s id="8">And in convincing yourself that this metaphor is true, there are lots of similarities between genetic programs and computer programs that could help to convince you.</s>
 <s id="9">But one, to me, that's most compelling is the peculiar sensitivity to small changes that can make large changes in biological development -- the output.</s>
 <s id="10">A small mutation can take a two-wing fly and make it a four-wing fly.</s>
 <s id="11">Or it could take a fly and put legs where its antennae should be.</s>
 <s id="12">Or if you're familiar with "The Princess Bride," it could create a six-fingered man.</s>
 <s id="13">Now, a hallmark of computer programs is just this kind of sensitivity to small changes.</s>
 <s id="14">If your bank account's one dollar, and you flip a single bit, you could end up with a thousand dollars.</s>
 <s id="15">So these small changes are things that I think that -- they indicate to us that a complicated computation in development is underlying these amplified, large changes.</s>
 <s id="16">So now, all of this indicates that there are molecular programs underlying biology, and it shows the power of molecular programs -- biology does.</s>
 <s id="17">And what I want to do is write molecular programs, potentially to build technology.</s>
 <s id="18">And there are a lot of people doing this, a lot of synthetic biologists doing this, like Craig Venter.</s>
 <s id="19">And they concentrate on using cells.</s>
 <s id="20">They're cell-oriented.</s>
 <s id="21">So my friends, molecular programmers, and I have a sort of biomolecule-centric approach.</s>
 <s id="22">We're interested in using DNA, RNA and protein, and building new languages for building things from the bottom up, using biomolecules, potentially having nothing to do with biology.</s>
 <s id="23">So, these are all the machines in a cell.</s>
 <s id="24">There's a camera.</s>
 <s id="25">There's the solar panels of the cell, some switches that turn your genes on and off, the girders of the cell, motors that move your muscles.</s>
 <s id="26">My little group of molecular programmers are trying to refashion all of these parts from DNA.</s>
 <s id="27">We're not DNA zealots, but DNA is the cheapest, easiest to understand and easy to program material to do this.</s>
 <s id="28">And as other things become easier to use -- maybe protein -- we'll work with those.</s>
 <s id="29">If we succeed, what will molecular programming look like?</s>
 <s id="30">You're going to sit in front of your computer.</s>
 <s id="31">You're going to design something like a cell phone, and in a high-level language, you'll describe that cell phone.</s>
 <s id="32">Then you're going to have a compiler that's going to take that description and it's going to turn it into actual molecules that can be sent to a synthesizer and that synthesizer will pack those molecules into a seed.</s>
 <s id="33">And what happens if you water and feed that seed appropriately, is it will do a developmental computation, a molecular computation, and it'll build an electronic computer.</s>
 <s id="34">And if I haven't revealed my prejudices already, I think that life has been about molecular computers building electrochemical computers, building electronic computers, which together with electrochemical computers will build new molecular computers, which will build new electronic computers, and so forth.</s>
 <s id="35">And if you buy all of this, and you think life is about computation, as I do, then you look at big questions through the eyes of a computer scientist.</s>
 <s id="36">So one big question is, how does a baby know when to stop growing?</s>
 <s id="37">And for molecular programming, the question is how does your cell phone know when to stop growing?</s>
 <s id="38">(Laughter) Or how does a computer program know when to stop running?</s>
 <s id="39">Or more to the point, how do you know if a program will ever stop?</s>
 <s id="40">There are other questions like this, too.</s>
 <s id="41">One of them is Craig Venter's question.</s>
 <s id="42">Turns out I think he's actually a computer scientist.</s>
 <s id="43">He asked, how big is the minimal genome that will give me a functioning microorganism?</s>
 <s id="44">How few genes can I use?</s>
 <s id="45">This is exactly analogous to the question, what's the smallest program I can write that will act exactly like Microsoft Word?</s>
 <s id="46">(Laughter) And just as he's writing, you know, bacteria that will be smaller, he's writing genomes that will work, we could write smaller programs that would do what Microsoft Word does.</s>
 <s id="47">But for molecular programming, our question is, how many molecules do we need to put in that seed to get a cell phone?</s>
 <s id="48">What's the smallest number we can get away with?</s>
 <s id="49">Now, these are big questions in computer science.</s>
 <s id="50">These are all complexity questions, and computer science tells us that these are very hard questions.</s>
 <s id="51">Almost -- many of them are impossible.</s>
 <s id="52">But for some tasks, we can start to answer them.</s>
 <s id="53">So, I'm going to start asking those questions for the DNA structures I'm going to talk about next.</s>
 <s id="54">So, this is normal DNA, what you think of as normal DNA.</s>
 <s id="55">It's double-stranded, it's a double helix, has the As, Ts, Cs and Gs that pair to hold the strands together.</s>
 <s id="56">And I'm going to draw it like this sometimes, just so I don't scare you.</s>
 <s id="57">We want to look at individual strands and not think about the double helix.</s>
 <s id="58">When we synthesize it, it comes single-stranded, so we can take the blue strand in one tube and make an orange strand in the other tube, and they're floppy when they're single-stranded.</s>
 <s id="59">You mix them together and they make a rigid double helix.</s>
 <s id="60">Now for the last 25 years, Ned Seeman and a bunch of his descendants have worked very hard and made beautiful three-dimensional structures using this kind of reaction of DNA strands coming together.</s>
 <s id="61">But a lot of their approaches, though elegant, take a long time.</s>
 <s id="62">They can take a couple of years, or it can be difficult to design.</s>
 <s id="63">So I came up with a new method a couple of years ago I call DNA origami that's so easy you could do it at home in your kitchen and design the stuff on a laptop.</s>
 <s id="64">But to do it, you need a long, single strand of DNA, which is technically very difficult to get.</s>
 <s id="65">So, you can go to a natural source.</s>
 <s id="66">You can look in this computer-fabricated artifact, and he's got a double-stranded genome -- that's no good.</s>
 <p id="p67">
  <s id="67.1">You look in his intestines.</s>
  <s id="67.2">There are billions of bacteria.</s>
 </p>
 <s id="68">They're no good either.</s>
 <s id="69">Double strand again, but inside them, they're infected with a virus that has a nice, long, single-stranded genome that we can fold like a piece of paper.</s>
 <s id="70">And here's how we do it.</s>
 <s id="71">This is part of that genome.</s>
 <s id="72">We add a bunch of short, synthetic DNAs that I call staples.</s>
 <s id="73">Each one has a left half that binds the long strand in one place, and a right half that binds it in a different place, and brings the long strand together like this.</s>
 <s id="74">The net action of many of these on that long strand is to fold it into something like a rectangle.</s>
 <s id="75">Now, we can't actually take a movie of this process, but Shawn Douglas at Harvard has made a nice visualization for us that begins with a long strand and has some short strands in it.</s>
 <s id="76">And what happens is that we mix these strands together.</s>
 <s id="77">We heat them up, we add a little bit of salt, we heat them up to almost boiling and cool them down, and as we cool them down, the short strands bind the long strands and start to form structure.</s>
 <s id="78">And you can see a little bit of double helix forming there.</s>
 <s id="79">When you look at DNA origami, you can see that what it really is, even though you think it's complicated, is a bunch of double helices that are parallel to each other, and they're held together by places where short strands go along one helix and then jump to another one.</s>
 <s id="80">So there's a strand that goes like this, goes along one helix and binds -- it jumps to another helix and comes back.</s>
 <s id="81">That holds the long strand like this.</s>
 <s id="82">Now, to show that we could make any shape or pattern that we wanted, I tried to make this shape.</s>
 <s id="83">I wanted to fold DNA into something that goes up over the eye, down the nose, up the nose, around the forehead, back down and end in a little loop like this.</s>
 <s id="84">And so, I thought, if this could work, anything could work.</s>
 <s id="85">So I had the computer program design the short staples to do this.</s>
 <s id="86">I ordered them; they came by FedEx.</s>
 <s id="87">I mixed them up, heated them, cooled them down, and I got 50 billion little smiley faces floating around in a single drop of water.</s>
 <s id="88">And each one of these is just one-thousandth the width of a human hair, OK?</s>
 <s id="89">So, they're all floating around in solution, and to look at them, you have to get them on a surface where they stick.</s>
 <s id="90">So, you pour them out onto a surface and they start to stick to that surface, and we take a picture using an atomic-force microscope.</s>
 <s id="91">It's got a needle, like a record needle, that goes back and forth over the surface, bumps up and down, and feels the height of the first surface.</s>
 <s id="92">It feels the DNA origami.</s>
 <s id="93">There's the atomic-force microscope working and you can see that the landing's a little rough.</s>
 <s id="94">When you zoom in, they've got, you know, weak jaws that flip over their heads and some of their noses get punched out, but it's pretty good.</s>
 <s id="95">You can zoom in and even see the extra little loop, this little nano-goatee.</s>
 <s id="96">Now, what's great about this is anybody can do this.</s>
 <s id="97">And so, I got this in the mail about a year after I did this, unsolicited.</s>
 <p id="p98">
  <s id="98.1">Anyone know what this is?</s>
  <s id="98.2">What is it?</s>
 </p>
 <s id="99">It's China, right?</s>
 <s id="100">So, what happened is, a graduate student in China, Lulu Qian, did a great job.</s>
 <s id="101">She wrote all her own software to design and built this DNA origami, a beautiful rendition of China, which even has Taiwan, and you can see it's sort of on the world's shortest leash, right?</s>
 <s id="102">(Laughter) So, this works really well and you can make patterns as well as shapes, OK?</s>
 <s id="103">And you can make a map of the Americas and spell DNA with DNA.</s>
 <s id="104">And what's really neat about it -- well, actually, this all looks like nano-artwork, but it turns out that nano-artwork is just what you need to make nano-circuits.</s>
 <s id="105">So, you can put circuit components on the staples, like a light bulb and a light switch.</s>
 <s id="106">Let the thing assemble, and you'll get some kind of a circuit.</s>
 <s id="107">And then you can maybe wash the DNA away and have the circuit left over.</s>
 <s id="108">So, this is what some colleagues of mine at Caltech did.</s>
 <s id="109">They took a DNA origami, organized some carbon nano-tubes, made a little switch, you see here, wired it up, tested it and showed that it is indeed a switch.</s>
 <s id="110">Now, this is just a single switch and you need half a billion for a computer, so we have a long way to go.</s>
 <s id="111">But this is very promising because the origami can organize parts just one-tenth the size of those in a normal computer.</s>
 <s id="112">So it's very promising for making small computers.</s>
 <s id="113">Now, I want to get back to that compiler.</s>
 <s id="114">The DNA origami is a proof that that compiler actually works.</s>
 <s id="115">So, you start with something in the computer.</s>
 <s id="116">You get a high-level description of the computer program, a high-level description of the origami.</s>
 <s id="117">You can compile it to molecules, send it to a synthesizer, and it actually works.</s>
 <s id="118">And it turns out that a company has made a nice program that's much better than my code, which was kind of ugly, and will allow us to do this in a nice, visual, computer-aided design way.</s>
 <s id="119">So, now you can say, all right, why isn't DNA origami the end of the story?</s>
 <s id="120">You have your molecular compiler, you can do whatever you want.</s>
 <s id="121">The fact is that it does not scale.</s>
 <s id="122">So if you want to build a human from DNA origami, the problem is, you need a long strand that's 10 trillion trillion bases long.</s>
 <s id="123">That's three light years' worth of DNA, so we're not going to do this.</s>
 <s id="124">We're going to turn to another technology, called algorithmic self-assembly of tiles.</s>
 <s id="125">It was started by Erik Winfree, and what it does, it has tiles that are a hundredth the size of a DNA origami.</s>
 <s id="126">You zoom in, there are just four DNA strands and they have little single-stranded bits on them that can bind to other tiles, if they match.</s>
 <s id="127">And we like to draw these tiles as little squares.</s>
 <s id="128">And if you look at their sticky ends, these little DNA bits, you can see that they actually form a checkerboard pattern.</s>
 <s id="129">So, these tiles would make a complicated, self-assembling checkerboard.</s>
 <s id="130">And the point of this, if you didn't catch that, is that tiles are a kind of molecular program and they can output patterns.</s>
 <s id="131">And a really amazing part of this is that any computer program can be translated into one of these tile programs -- specifically, counting.</s>
 <s id="132">So, you can come up with a set of tiles that when they come together, form a little binary counter rather than a checkerboard.</s>
 <s id="133">So you can read off binary numbers five, six and seven.</s>
 <s id="134">And in order to get these kinds of computations started right, you need some kind of input, a kind of seed.</s>
 <s id="135">You can use DNA origami for that.</s>
 <s id="136">You can encode the number 32 in the right-hand side of a DNA origami, and when you add those tiles that count, they will start to count -- they will read that 32 and they'll stop at 32.</s>
 <s id="137">So, what we've done is we've figured out a way to have a molecular program know when to stop going.</s>
 <s id="138">It knows when to stop growing because it can count.</s>
 <s id="139">It knows how big it is.</s>
 <s id="140">So, that answers that sort of first question I was talking about.</s>
 <s id="141">It doesn't tell us how babies do it, however.</s>
 <s id="142">So now, we can use this counting to try and get at much bigger things than DNA origami could otherwise.</s>
 <s id="143">Here's the DNA origami, and what we can do is we can write 32 on both edges of the DNA origami, and we can now use our watering can and water with tiles, and we can start growing tiles off of that and create a square.</s>
 <s id="144">The counter serves as a template to fill in a square in the middle of this thing.</s>
 <s id="145">So, what we've done is we've succeeded in making something much bigger than a DNA origami by combining DNA origami with tiles.</s>
 <s id="146">And the neat thing about it is, is that it's also reprogrammable.</s>
 <s id="147">You can just change a couple of the DNA strands in this binary representation and you'll get 96 rather than 32.</s>
 <s id="148">And if you do that, the origami's the same size, but the resulting square that you get is three times bigger.</s>
 <s id="149">So, this sort of recapitulates what I was telling you about development.</s>
 <s id="150">You have a very sensitive computer program where small changes -- single, tiny, little mutations -- can take something that made one size square and make something very much bigger.</s>
 <s id="151">Now, this -- using counting to compute and build these kinds of things by this kind of developmental process is something that also has bearing on Craig Venter's question.</s>
 <s id="152">So, you can ask, how many DNA strands are required to build a square of a given size?</s>
 <s id="153">If we wanted to make a square of size 10, 100 or 1,000, if we used DNA origami alone, we would require a number of DNA strands that's the square of the size of that square; so we'd need 100, 10,000 or a million DNA strands.</s>
 <s id="154">That's really not affordable.</s>
 <s id="155">But if we use a little computation -- we use origami, plus some tiles that count -- then we can get away with using 100, 200 or 300 DNA strands.</s>
 <s id="156">And so we can exponentially reduce the number of DNA strands we use, if we use counting, if we use a little bit of computation.</s>
 <s id="157">And so computation is some very powerful way to reduce the number of molecules you need to build something, to reduce the size of the genome that you're building.</s>
 <s id="158">And finally, I'm going to get back to that sort of crazy idea about computers building computers.</s>
 <s id="159">If you look at the square that you build with the origami and some counters growing off it, the pattern that it has is exactly the pattern that you need to make a memory.</s>
 <s id="160">So if you affix some wires and switches to those tiles -- rather than to the staple strands, you affix them to the tiles -- then they'll self-assemble the somewhat complicated circuits, the demultiplexer circuits, that you need to address this memory.</s>
 <s id="161">So you can actually make a complicated circuit using a little bit of computation.</s>
 <s id="162">It's a molecular computer building an electronic computer.</s>
 <s id="163">Now, you ask me, how far have we gotten down this path?</s>
 <s id="164">Experimentally, this is what we've done in the last year.</s>
 <s id="165">Here is a DNA origami rectangle, and here are some tiles growing from it.</s>
 <s id="166">And you can see how they count.</s>
 <s id="167">One, two, three, four, five, six, nine, 10, 11, 12, 17.</s>
 <s id="168">So it's got some errors, but at least it counts up.</s>
 <s id="169">(Laughter) So, it turns out we actually had this idea nine years ago, and that's about the time constant for how long it takes to do these kinds of things, so I think we made a lot of progress.</s>
 <s id="170">We've got ideas about how to fix these errors.</s>
 <s id="171">And I think in the next five or 10 years, we'll make the kind of squares that I described and maybe even get to some of those self-assembled circuits.</s>
 <s id="172">So now, what do I want you to take away from this talk?</s>
 <s id="173">I want you to remember that to create life's very diverse and complex forms, life uses computation to do that.</s>
 <s id="174">And the computations that it uses, they're molecular computations, and in order to understand this and get a better handle on it, as Feynman said, you know, we need to build something to understand it.</s>
 <s id="175">And so we are going to use molecules and refashion this thing, rebuild everything from the bottom up, using DNA in ways that nature never intended, using DNA origami, and DNA origami to seed this algorithmic self-assembly.</s>
 <s id="176">You know, so this is all very cool, but what I'd like you to take from the talk, hopefully from some of those big questions, is that this molecular programming isn't just about making gadgets.</s>
 <s id="177">It's not just making about -- it's making self-assembled cell phones and circuits.</s>
 <p id="p178">
  <s id="178.1">What it's really about is taking computer science and looking at big questions in a new light, asking new versions of those big questions and trying to understand how biology can make such amazing things.</s>
  <s id="178.2">Thank you.</s>
 </p>
 <s id="179">(Applause)</s>
</text>
